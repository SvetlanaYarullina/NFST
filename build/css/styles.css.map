{"version":3,"sources":["variables/_fonts.scss","variables/_typography.scss","variables/_mixins.scss","../../node_modules/bootstrap/scss/_grid.scss","global.scss","../../node_modules/bootstrap/scss/mixins/_grid.scss","../../node_modules/bootstrap/scss/mixins/_breakpoints.scss","variables/_make-grid-columns.scss","styles.css","../../node_modules/bootstrap/scss/_containers.scss","../../node_modules/bootstrap/scss/mixins/_container.scss","blocks/header.scss","blocks/popup.scss","blocks/advantages.scss"],"names":[],"mappings":"A,AAUE,WACE,mB,CACA,iG,CAEA,e,CACA,iB,CACA,kB,AANF,WACE,mB,CACA,qG,CAEA,e,CACA,iB,CACA,kB,AANF,WACE,mB,CACA,mG,CAEA,e,CACA,iB,CACA,kB,AANF,WACE,mB,CACA,+F,CAEA,e,CACA,iB,CACA,kB,AANF,WACE,mB,CACA,iG,CAEA,e,CACA,iB,CACA,kBChBJ,M,CACE,kB,CACA,iB,CACA,e,CACA,c,CACA,gB,CACA,oB,CACA,wB,CACA,a,CCNA,oCDFF,M,CAWI,kB,CACA,c,CACA,gB,CACA,sBAIJ,qB,CACE,a,CACA,e,CACA,iB,CACA,iB,CACA,kB,CACA,iB,CACA,iB,CACA,e,CACA,c,CACA,gB,CACA,wB,CACA,a,CC5BA,oCDgBF,qB,CAeI,e,CACA,iB,CACA,c,CACA,kBE/BF,I,CCLF,I,CAGE,Y,CDEA,I,CEAA,oB,CACA,e,CAEA,c,CAEA,sC,CACA,yC,CACA,wC,CFPA,M,CEgBA,a,CACA,U,CACA,c,CACA,yC,CACA,wC,CACA,6B,CCqCE,yBCxDQ,O,CACI,U,CAGJ,mB,CF8BV,a,CACA,U,CAcA,gB,CACE,a,CACA,U,CAFF,gB,CACE,a,CACA,S,CAFF,gB,CACE,a,CACA,e,CAFF,gB,CACE,a,CACA,S,CAFF,gB,CACE,a,CACA,S,CEnCQ,Y,CFiCV,gB,CACE,a,CACA,e,CEnCQ,Y,CFmBV,U,CEbkB,S,CAAA,S,CFEhB,a,CACA,S,CEHgB,S,CFGhB,U,CEMoB,Y,CFStB,a,CETsB,Y,CFStB,e,CEEc,O,CC4Ed,Q,CD1EkB,e,CAGJ,O,CC0Ed,Q,CDxEkB,e,CAPJ,O,CCkFd,Q,CDhFkB,qB,CAGJ,O,CCgFd,Q,CD9EkB,qB,CAPJ,O,CCwFd,Q,CDtFkB,oB,CAGJ,O,CCsFd,Q,CDpFkB,oB,CAPJ,O,CC8Fd,Q,CD5FkB,kB,CAGJ,O,CC4Fd,Q,CD1FkB,kB,CAPJ,O,CCoGd,Q,CDlGkB,oB,CAGJ,O,CCkGd,Q,CDhGkB,oB,CAPJ,O,CC0Gd,Q,CDxGkB,kB,CAGJ,O,CCwGd,Q,CDtGkB,oB,ADOhB,0BCxDQ,O,CACI,U,CAGJ,mB,CF8BV,a,CACA,U,CAcA,gB,CACE,a,CACA,U,CAFF,gB,CACE,a,CACA,S,CAFF,gB,CACE,a,CACA,e,CAFF,gB,CACE,a,CACA,S,CAFF,gB,CACE,a,CACA,S,CEnCQ,Y,CFiCV,gB,CACE,a,CACA,e,CEnCQ,Y,CFmBV,U,CEbkB,S,CAAA,S,CFEhB,a,CACA,S,CEHgB,S,CFGhB,U,CEMoB,Y,CFStB,a,CETsB,Y,CFStB,e,CEEc,O,CCsJd,Q,CDpJkB,e,CAGJ,O,CCoJd,Q,CDlJkB,e,CAPJ,O,CC4Jd,Q,CD1JkB,qB,CAGJ,O,CC0Jd,Q,CDxJkB,qB,CAPJ,O,CCkKd,Q,CDhKkB,oB,CAGJ,O,CCgKd,Q,CD9JkB,oB,CAPJ,O,CCwKd,Q,CDtKkB,kB,CAGJ,O,CCsKd,Q,CDpKkB,kB,CAPJ,O,CC8Kd,Q,CD5KkB,oB,CAGJ,O,CC4Kd,Q,CD1KkB,oB,CAPJ,O,CCoLd,Q,CDlLkB,kB,CAGJ,O,CCkLd,Q,CDhLkB,oB,ADOhB,+CCxDQ,O,CA6DQ,W,CAzDR,mB,CF8BV,a,CACA,U,CAcA,gB,CACE,a,CACA,U,CAFF,gB,CACE,a,CACA,S,CAFF,gB,CACE,a,CACA,e,CAFF,gB,CACE,a,CACA,S,CAFF,gB,CACE,a,CACA,S,CEnCQ,Y,CFiCV,gB,CACE,a,CACA,e,CEnCQ,Y,CFmBV,U,CEbkB,S,CAAA,S,CFEhB,a,CACA,e,CEHgB,S,CFGhB,e,CEyDoB,S,CAAA,S,CF1DpB,a,CACA,S,CEyDoB,S,CFzDpB,e,CEyDoB,S,CAAA,S,CF1DpB,a,CACA,e,CEyDoB,S,CFzDpB,U,CEMoB,Y,CFStB,a,CETsB,Y,CFStB,qB,CEmD0B,Y,CFnD1B,qB,CEmD0B,Y,CFnD1B,e,CEmD0B,Y,CFnD1B,qB,CEmD0B,Y,CFnD1B,qB,CEEc,O,CCoPd,Q,CDtLsB,e,CAzDR,O,CCkPd,Q,CDpLsB,e,CAnER,O,CC0Pd,Q,CD5LsB,qB,CAzDR,O,CCwPd,Q,CD1LsB,qB,CAnER,O,CCgQd,Q,CDlMsB,oB,CAzDR,O,CC8Pd,Q,CDhMsB,oB,CAnER,O,CCsQd,Q,CDxMsB,kB,CAzDR,O,CCoQd,Q,CDtMsB,kB,CAnER,O,CC4Qd,Q,CD9MsB,oB,CAzDR,O,CC0Qd,Q,CD5MsB,oB,CAnER,O,CCkRd,Q,CDpNsB,kB,CAzDR,O,CCgRd,Q,CDlNsB,oB,ADrDpB,gDCxDQ,O,CA6DQ,W,CAzDR,mB,CF8BV,a,CACA,U,CAcA,gB,CACE,a,CACA,U,CAFF,gB,CACE,a,CACA,S,CAFF,gB,CACE,a,CACA,e,CAFF,gB,CACE,a,CACA,S,CAFF,gB,CACE,a,CACA,S,CEnCQ,Y,CFiCV,gB,CACE,a,CACA,e,CEnCQ,Y,CFmBV,U,CEbkB,S,CAAA,S,CFEhB,a,CACA,e,CEHgB,S,CFGhB,e,CEyDoB,S,CAAA,S,CF1DpB,a,CACA,S,CEyDoB,S,CFzDpB,e,CEyDoB,S,CAAA,S,CF1DpB,a,CACA,e,CEyDoB,S,CFzDpB,U,CEMoB,Y,CFStB,a,CETsB,Y,CFStB,qB,CEmD0B,Y,CFnD1B,qB,CEmD0B,Y,CFnD1B,e,CEmD0B,Y,CFnD1B,qB,CEmD0B,Y,CFnD1B,qB,CEEc,O,CCkVd,Q,CDpRsB,e,CAzDR,O,CCgVd,Q,CDlRsB,e,CAnER,O,CCwVd,Q,CD1RsB,qB,CAzDR,O,CCsVd,Q,CDxRsB,qB,CAnER,O,CC8Vd,Q,CDhSsB,oB,CAzDR,O,CC4Vd,Q,CD9RsB,oB,CAnER,O,CCoWd,Q,CDtSsB,kB,CAzDR,O,CCkWd,Q,CDpSsB,kB,CAnER,O,CC0Wd,Q,CD5SsB,oB,CAzDR,O,CCwWd,Q,CD1SsB,oB,CAnER,O,CCgXd,Q,CDlTsB,kB,CAzDR,O,CC8Wd,Q,CDhTsB,oBE9GtB,U,CDkaF,gB,CAEA,a,CADA,a,CEtaE,U,CACA,mC,CACA,kC,CACA,iB,CACA,gB,CJwDE,yBGjDA,a,CAMI,6B,AH2CJ,0BGjDA,a,CAAA,a,CAMI,kBLpBR,I,CACE,e,CACA,gB,CAEA,qB,CACA,iB,CACA,W,CACA,0H,CACA,mB,CARF,I,CImcE,M,CACA,W,CACA,Y,CJvbE,qB,CAIJ,I,CACE,iB,CACA,S,CACA,W,CAGF,C,CACE,oB,CACA,uC,CAGF,C,CACE,Y,CACA,iB,CAFF,Y,CAII,e,CAIJ,E,CImbA,E,CACA,E,CACA,E,CACA,E,CACA,E,CJjbE,Y,CAGF,G,CACE,iB,CJrCA,WACE,mB,CACA,iG,CAEA,e,CACA,iB,CACA,kB,AANF,WACE,mB,CACA,qG,CAEA,e,CACA,iB,CACA,kB,AANF,WACE,mB,CACA,mG,CAEA,e,CACA,iB,CACA,kB,AANF,WACE,mB,CACA,+F,CAEA,e,CACA,iB,CACA,kB,AANF,WACE,mB,CACA,iG,CAEA,e,CACA,iB,CACA,kBWhBJ,O,CACE,a,CAEF,W,CACE,wB,CAGF,oB,CACE,Y,CACA,6B,CACA,c,CACA,W,CTTA,oCSKF,oB,CAOI,Y,CACA,gB,CACA,eAIJ,K,CACE,Y,CACA,kB,CAGF,uB,CACE,sD,CACA,2B,CACA,4B,CT1BA,oCSuBF,uB,CAMI,qB,CAIJ,Y,CAEI,uD,CACA,2B,CACA,qB,CACA,yBAIJ,oB,CACE,a,CACA,e,CT5CA,oCS0CF,oB,CAKI,iBAIJ,qB,CACE,e,CACA,e,CACA,iB,CACA,e,CACA,c,CACA,gB,CTzDA,oCSmDF,qB,CASI,e,CACA,c,CACA,kBAKJ,2B,CACE,e,CACA,e,CACA,iB,CACA,e,CACA,c,CACA,gB,CTzEA,oCSmEF,2B,CASI,e,CACA,c,CACA,kBAIJ,wB,CACE,Y,CACA,e,CACA,iB,CACA,e,CACA,c,CACA,gB,CTxFA,oCSkFF,wB,CASI,e,CACA,c,CACA,kBAIJ,oB,CACE,iB,CADF,4B,CAII,U,CACA,iB,CACA,iB,CACA,W,CACA,6B,CTzGF,oCSiGF,4B,CAWM,iB,CACA,W,CAZN,oB,CAiBI,mBAIJ,sB,CACE,e,CTvHA,oCSsHF,sB,CAII,iBC5HJ,M,CACI,c,CACA,U,CACA,wB,CACA,qC,CAGJ,Y,CACI,S,CACA,Q,CACA,Y,CACA,W,CACA,kB,CACA,iB,CVXF,oCUKF,Y,CASQ,S,CACA,oBAIR,W,CACI,a,CAGJ,Y,CACI,iB,CACA,K,CACA,W,CACA,U,CACA,W,CACA,4B,CACA,Q,CACA,c,CJ4mBJ,mB,CIzmBA,oB,CAEI,U,CACA,iB,CACA,Q,CACA,Q,CACA,U,CACA,U,CACA,wB,CAGJ,oB,CACI,uB,CAIJ,mB,CACI,wB,CAIJ,S,CAEI,e,CACA,c,CACA,gB,CAGJ,a,CAEI,e,CJqmBJ,gC,CIlmBA,4B,CAEI,qB,CACA,U,CAEA,2B,CACA,Y,CACA,U,CACA,wB,CAEA,wB,CACA,wB,CAGJ,uB,CACI,oB,CAGJ,oB,CACI,Y,CACA,c,CACA,6B,CAGJ,e,CACI,iB,CACA,iB,CACA,c,CJgmBJ,qB,CI7lBA,qB,CAEI,a,CAGJ,wD,CACI,iB,CACA,K,CACA,M,CACA,U,CACA,W,CACA,qB,CAGJ,8D,CACI,oB,CAEA,gB,CJ6lBJ,uE,CI1lBA,wE,CAEI,U,CACA,iB,CACA,O,CACA,Q,CACA,U,CACA,U,CACA,qB,CAGJ,wE,CACI,uB,CAGJ,uE,CACI,wB,CAGJ,Q,CACI,U,CACA,yB,CJylBJ,c,CItlBA,c,CAEI,oB,CAGJ,mB,CACI,W,CACA,qB,CACA,c,CACA,wB,CACA,a,CCzJJ,W,CACI,e,CXCF,oCWFF,W,CAIQ,kBAIR,iB,CACI,gB,CACA,iB,CACA,e,CACA,c,CACA,gB,CXXF,oCWMF,iB,CAQQ,gB,CACA,c,CACA,kBAIR,iB,CACI,Y,CACA,kB,CXtBF,oCWoBF,iB,CAKQ,oBAKR,iB,CACI,Y,CACA,kB,CAFJ,qB,CAKQ,Y,CXnCN,oCW8BF,qB,CAQQ,U,CACA,a","file":"styles.css","sourcesContent":["$fonts: (\r\n  (\"Rubik\", \"Rubik-Light\", 300, normal),\r\n  (\"Rubik\", \"Rubik-Regular\", 400, normal),\r\n  (\"Rubik\", \"Rubik-Medium\", 500, normal),\r\n  (\"Rubik\", \"Rubik-Bold\", 700, normal),\r\n  (\"Rubik\", \"Rubik-Black\", 900, normal)\r\n \r\n);\r\n\r\n@mixin font-face($family, $file-name, $weight, $style) {\r\n  @font-face {\r\n    font-family: $family;\r\n    src: url(\"../fonts/\" + $file-name + \".woff2\") format(\"woff2\"),\r\n      url(\"../fonts/\" + $file-name + \".woff\") format(\"woff\");\r\n    font-weight: $weight;\r\n    font-style: $style;\r\n    font-display: swap;\r\n  }\r\n}\r\n\r\n@each $family, $file-name, $weight, $style in $fonts {\r\n  @include font-face($family, $file-name, $weight, $style);\r\n}",".title {\r\n  margin-bottom: 37px;\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  font-size: 24px;\r\n  line-height: 34px;\r\n  letter-spacing: 0.03em;\r\n  text-transform: uppercase;\r\n  color: $white;\r\n\r\n  @include min-tablet {\r\n    margin-bottom: 74px;\r\n    font-size: 36px;\r\n    line-height: 72px;\r\n    letter-spacing: 0.05em;\r\n  }  \r\n}\r\n\r\n.button__registration {\r\n  display: block;\r\n  max-width: 288px;\r\n  padding: 16px 60px;\r\n  text-align: center;\r\n  background: #F6255A;\r\n  border-radius: 8px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 14px;\r\n  line-height: 17px;\r\n  text-transform: uppercase;\r\n  color: $white;\r\n\r\n  @include min-tablet {    \r\n    max-width: 310px;\r\n    padding: 21px 47px;\r\n    font-size: 18px;\r\n    line-height: 21px;\r\n  } \r\n}","// mobile first\r\n@mixin min-tablet {\r\n  @media screen and (min-width: $tablet) {\r\n    @content;\r\n  }\r\n}","// Row\n//\n// Rows contain your columns.\n\n@if $enable-grid-classes {\n  .row {\n    @include make-row();\n\n    > * {\n      @include make-col-ready();\n    }\n  }\n}\n\n@if $enable-cssgrid {\n  .grid {\n    display: grid;\n    grid-template-rows: repeat(var(--#{$variable-prefix}rows, 1), 1fr);\n    grid-template-columns: repeat(var(--#{$variable-prefix}columns, #{$grid-columns}), 1fr);\n    gap: var(--#{$variable-prefix}gap, #{$grid-gutter-width});\n\n    @include make-cssgrid();\n  }\n}\n\n\n// Columns\n//\n// Common styles for small and large grid columns\n\n@if $enable-grid-classes {\n  @include make-grid-columns();\n}\n","body {\r\n  max-width: 100vw;\r\n  min-height: 100vh;\r\n  display: flex;\r\n  flex-direction: column;\r\n  overflow-x: hidden;\r\n  margin: auto;\r\n  background: $bg-blue;\r\n  font-family: \"Rubik\";\r\n\r\n  &,\r\n  & *,\r\n  *:after,\r\n  *:before {\r\n    box-sizing: border-box;\r\n  }\r\n}\r\n\r\nmain {\r\n  position: relative;\r\n  z-index: 1;\r\n  flex-grow: 1;\r\n}\r\n\r\na {\r\n  text-decoration: none;\r\n  -webkit-tap-highlight-color: transparent;\r\n}\r\n\r\np {\r\n  margin-top: 0;\r\n  margin-bottom: 1em;\r\n  &:last-child {\r\n    margin-bottom: 0;\r\n  }\r\n}\r\n\r\nh1,\r\nh2,\r\nh3,\r\nh4,\r\nh5,\r\nh6 {\r\n  margin-top: 0;\r\n}\r\n\r\nsvg {\r\n  fill: currentColor;\r\n}","// Grid system\n//\n// Generate semantic grid columns with these mixins.\n\n@mixin make-row($gutter: $grid-gutter-width) {\n  --#{$variable-prefix}gutter-x: #{$gutter};\n  --#{$variable-prefix}gutter-y: 0;\n  display: flex;\n  flex-wrap: wrap;\n  // TODO: Revisit calc order after https://github.com/react-bootstrap/react-bootstrap/issues/6039 is fixed\n  margin-top: calc(-1 * var(--#{$variable-prefix}gutter-y)); // stylelint-disable-line function-disallowed-list\n  margin-right: calc(-.5 * var(--#{$variable-prefix}gutter-x)); // stylelint-disable-line function-disallowed-list\n  margin-left: calc(-.5 * var(--#{$variable-prefix}gutter-x)); // stylelint-disable-line function-disallowed-list\n}\n\n@mixin make-col-ready($gutter: $grid-gutter-width) {\n  // Add box sizing if only the grid is loaded\n  box-sizing: if(variable-exists(include-column-box-sizing) and $include-column-box-sizing, border-box, null);\n  // Prevent columns from becoming too narrow when at smaller grid tiers by\n  // always setting `width: 100%;`. This works because we set the width\n  // later on to override this initial width.\n  flex-shrink: 0;\n  width: 100%;\n  max-width: 100%; // Prevent `.col-auto`, `.col` (& responsive variants) from breaking out the grid\n  padding-right: calc(var(--#{$variable-prefix}gutter-x) * .5); // stylelint-disable-line function-disallowed-list\n  padding-left: calc(var(--#{$variable-prefix}gutter-x) * .5); // stylelint-disable-line function-disallowed-list\n  margin-top: var(--#{$variable-prefix}gutter-y);\n}\n\n@mixin make-col($size: false, $columns: $grid-columns) {\n  @if $size {\n    flex: 0 0 auto;\n    width: percentage(divide($size, $columns));\n\n  } @else {\n    flex: 1 1 0;\n    max-width: 100%;\n  }\n}\n\n@mixin make-col-auto() {\n  flex: 0 0 auto;\n  width: auto;\n}\n\n@mixin make-col-offset($size, $columns: $grid-columns) {\n  $num: divide($size, $columns);\n  margin-left: if($num == 0, 0, percentage($num));\n}\n\n// Row columns\n//\n// Specify on a parent element(e.g., .row) to force immediate children into NN\n// numberof columns. Supports wrapping to new lines, but does not do a Masonry\n// style grid.\n@mixin row-cols($count) {\n  > * {\n    flex: 0 0 auto;\n    width: divide(100%, $count);\n  }\n}\n\n// Framework grid generation\n//\n// Used only by Bootstrap to generate the correct number of grid classes given\n// any value of `$grid-columns`.\n\n@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {\n  @each $breakpoint in map-keys($breakpoints) {\n    $infix: breakpoint-infix($breakpoint, $breakpoints);\n\n    @include media-breakpoint-up($breakpoint, $breakpoints) {\n      // Provide basic `.col-{bp}` classes for equal-width flexbox columns\n      .col#{$infix} {\n        flex: 1 0 0%; // Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4\n      }\n\n      .row-cols#{$infix}-auto > * {\n        @include make-col-auto();\n      }\n\n      @if $grid-row-columns > 0 {\n        @for $i from 1 through $grid-row-columns {\n          .row-cols#{$infix}-#{$i} {\n            @include row-cols($i);\n          }\n        }\n      }\n\n      .col#{$infix}-auto {\n        @include make-col-auto();\n      }\n\n      @if $columns > 0 {\n        @for $i from 1 through $columns {\n          .col#{$infix}-#{$i} {\n            @include make-col($i, $columns);\n          }\n        }\n\n        // `$columns - 1` because offsetting by the width of an entire row isn't possible\n        @for $i from 0 through ($columns - 1) {\n          @if not ($infix == \"\" and $i == 0) { // Avoid emitting useless .offset-0\n            .offset#{$infix}-#{$i} {\n              @include make-col-offset($i, $columns);\n            }\n          }\n        }\n      }\n\n      // Gutters\n      //\n      // Make use of `.g-*`, `.gx-*` or `.gy-*` utilities to change spacing between the columns.\n      @each $key, $value in $gutters {\n        .g#{$infix}-#{$key},\n        .gx#{$infix}-#{$key} {\n          --#{$variable-prefix}gutter-x: #{$value};\n        }\n\n        .g#{$infix}-#{$key},\n        .gy#{$infix}-#{$key} {\n          --#{$variable-prefix}gutter-y: #{$value};\n        }\n      }\n    }\n  }\n}\n\n@mixin make-cssgrid($columns: $grid-columns, $breakpoints: $grid-breakpoints) {\n  @each $breakpoint in map-keys($breakpoints) {\n    $infix: breakpoint-infix($breakpoint, $breakpoints);\n\n    @include media-breakpoint-up($breakpoint, $breakpoints) {\n      @if $columns > 0 {\n        @for $i from 1 through $columns {\n          .g-col#{$infix}-#{$i} {\n            grid-column: auto / span $i;\n          }\n        }\n\n        // Start with `1` because `0` is and invalid value.\n        // Ends with `$columns - 1` because offsetting by the width of an entire row isn't possible.\n        @for $i from 1 through ($columns - 1) {\n          .g-start#{$infix}-#{$i} {\n            grid-column-start: $i;\n          }\n        }\n      }\n    }\n  }\n}\n","// Breakpoint viewport sizes and media queries.\n//\n// Breakpoints are defined as a map of (name: minimum width), order from small to large:\n//\n//    (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px)\n//\n// The map defined in the `$grid-breakpoints` global variable is used as the `$breakpoints` argument by default.\n\n// Name of the next breakpoint, or null for the last breakpoint.\n//\n//    >> breakpoint-next(sm)\n//    md\n//    >> breakpoint-next(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    md\n//    >> breakpoint-next(sm, $breakpoint-names: (xs sm md lg xl))\n//    md\n@function breakpoint-next($name, $breakpoints: $grid-breakpoints, $breakpoint-names: map-keys($breakpoints)) {\n  $n: index($breakpoint-names, $name);\n  @if not $n {\n    @error \"breakpoint `#{$name}` not found in `#{$breakpoints}`\";\n  }\n  @return if($n < length($breakpoint-names), nth($breakpoint-names, $n + 1), null);\n}\n\n// Minimum breakpoint width. Null for the smallest (first) breakpoint.\n//\n//    >> breakpoint-min(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    576px\n@function breakpoint-min($name, $breakpoints: $grid-breakpoints) {\n  $min: map-get($breakpoints, $name);\n  @return if($min != 0, $min, null);\n}\n\n// Maximum breakpoint width.\n// The maximum value is reduced by 0.02px to work around the limitations of\n// `min-` and `max-` prefixes and viewports with fractional widths.\n// See https://www.w3.org/TR/mediaqueries-4/#mq-min-max\n// Uses 0.02px rather than 0.01px to work around a current rounding bug in Safari.\n// See https://bugs.webkit.org/show_bug.cgi?id=178261\n//\n//    >> breakpoint-max(md, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    767.98px\n@function breakpoint-max($name, $breakpoints: $grid-breakpoints) {\n  $max: map-get($breakpoints, $name);\n  @return if($max and $max > 0, $max - .02, null);\n}\n\n// Returns a blank string if smallest breakpoint, otherwise returns the name with a dash in front.\n// Useful for making responsive utilities.\n//\n//    >> breakpoint-infix(xs, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"\"  (Returns a blank string)\n//    >> breakpoint-infix(sm, (xs: 0, sm: 576px, md: 768px, lg: 992px, xl: 1200px))\n//    \"-sm\"\n@function breakpoint-infix($name, $breakpoints: $grid-breakpoints) {\n  @return if(breakpoint-min($name, $breakpoints) == null, \"\", \"-#{$name}\");\n}\n\n// Media of at least the minimum breakpoint width. No query for the smallest breakpoint.\n// Makes the @content apply to the given breakpoint and wider.\n@mixin media-breakpoint-up($name, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($name, $breakpoints);\n  @if $min {\n    @media (min-width: $min) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media of at most the maximum breakpoint width. No query for the largest breakpoint.\n// Makes the @content apply to the given breakpoint and narrower.\n@mixin media-breakpoint-down($name, $breakpoints: $grid-breakpoints) {\n  $max: breakpoint-max($name, $breakpoints);\n  @if $max {\n    @media (max-width: $max) {\n      @content;\n    }\n  } @else {\n    @content;\n  }\n}\n\n// Media that spans multiple breakpoint widths.\n// Makes the @content apply between the min and max breakpoints\n@mixin media-breakpoint-between($lower, $upper, $breakpoints: $grid-breakpoints) {\n  $min: breakpoint-min($lower, $breakpoints);\n  $max: breakpoint-max($upper, $breakpoints);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($lower, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($upper, $breakpoints) {\n      @content;\n    }\n  }\n}\n\n// Media between the breakpoint's minimum and maximum widths.\n// No minimum for the smallest breakpoint, and no maximum for the largest one.\n// Makes the @content apply only to the given breakpoint, not viewports any wider or narrower.\n@mixin media-breakpoint-only($name, $breakpoints: $grid-breakpoints) {\n  $min:  breakpoint-min($name, $breakpoints);\n  $next: breakpoint-next($name, $breakpoints);\n  $max:  breakpoint-max($next);\n\n  @if $min != null and $max != null {\n    @media (min-width: $min) and (max-width: $max) {\n      @content;\n    }\n  } @else if $max == null {\n    @include media-breakpoint-up($name, $breakpoints) {\n      @content;\n    }\n  } @else if $min == null {\n    @include media-breakpoint-down($next, $breakpoints) {\n      @content;\n    }\n  }\n}\n","﻿@import './media';\r\n@mixin make-grid-columns($columns: $grid-columns, $gutter: $grid-gutter-width, $breakpoints: $grid-breakpoints) {\r\n    @each $breakpoint in map-keys($breakpoints) {\r\n        $infix: breakpoint-infix($breakpoint, $breakpoints);\r\n\r\n        @include media-breakpoint-up($breakpoint, $breakpoints) {\r\n            // Provide basic `.col-{bp}` classes for equal-width flexbox columns\r\n            .col#{$infix} {\r\n                flex: 1 0 0; // Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4\r\n            }\r\n\r\n            .row-cols#{$infix}-auto > * {\r\n                @include make-col-auto();\r\n            }\r\n\r\n            @if $grid-row-columns > 0 {\r\n                @for $i from 1 through $grid-row-columns {\r\n                    .row-cols#{$infix}-#{$i} {\r\n                        @include row-cols($i);\r\n                    }\r\n                }\r\n            }\r\n\r\n            .col#{$infix}-auto {\r\n                @include make-col-auto();\r\n            }\r\n\r\n            @if $grid-columns-xs > 0 {\r\n                @for $i from 1 through $grid-columns-xs {\r\n                    .col#{$infix}-#{$i} {\r\n                        @include make-col($i, $grid-columns-xs);\r\n                    }\r\n                }\r\n\r\n                // `$grid-columns-xs - 1` because offsetting by the width of an entire row isn't possible\r\n                @for $i from 0 through ($grid-columns-xs - 1) {\r\n                    @if not($infix == '' and $i == 0) {\r\n                        // Avoid emitting useless .offset-0\r\n                        .offset#{$infix}-#{$i} {\r\n                            @include make-col-offset($i, $grid-columns-xs);\r\n                        }\r\n                    }\r\n                }\r\n            }\r\n\r\n            // Gutters\r\n            //\r\n            // Make use of `.g-*`, `.gx-*` or `.gy-*` utilities to change spacing between the columns.\r\n            @each $key, $value in $gutters {\r\n                .g#{$infix}-#{$key},\r\n                .gx#{$infix}-#{$key} {\r\n                    --#{$variable-prefix}gutter-x: #{$value};\r\n                }\r\n\r\n                .g#{$infix}-#{$key},\r\n                .gy#{$infix}-#{$key} {\r\n                    --#{$variable-prefix}gutter-y: #{$value};\r\n                }\r\n            }\r\n        }\r\n    }\r\n    @media (min-width: $tablet) {\r\n        @each $breakpoint in map-keys($breakpoints) {\r\n            $infix: breakpoint-infix($breakpoint, $breakpoints);\r\n\r\n            @include media-breakpoint-up($breakpoint, $breakpoints) {\r\n                // Provide basic `.col-{bp}` classes for equal-width flexbox columns\r\n                .col#{$infix} {\r\n                    flex: 1 0 0%; // Flexbugs #4: https://github.com/philipwalton/flexbugs#flexbug-4\r\n                }\r\n\r\n                .row-cols#{$infix}-auto > * {\r\n                    @include make-col-auto();\r\n                }\r\n\r\n                @if $grid-row-columns > 0 {\r\n                    @for $i from 1 through $grid-row-columns {\r\n                        .row-cols#{$infix}-#{$i} {\r\n                            @include row-cols($i);\r\n                        }\r\n                    }\r\n                }\r\n\r\n                .col#{$infix}-auto {\r\n                    @include make-col-auto();\r\n                }\r\n\r\n                @if $grid-columns-sm > 0 {\r\n                    @for $i from 1 through $grid-columns-sm {\r\n                        .col#{$infix}-#{$i} {\r\n                            @include make-col($i, $grid-columns-sm);\r\n                        }\r\n                    }\r\n\r\n                    // `$grid-columns-sm - 1` because offsetting by the width of an entire row isn't possible\r\n                    @for $i from 0 through ($grid-columns-sm - 1) {\r\n                        @if not($infix == '' and $i == 0) {\r\n                            // Avoid emitting useless .offset-0\r\n                            .offset#{$infix}-#{$i} {\r\n                                @include make-col-offset($i, $grid-columns-sm);\r\n                            }\r\n                        }\r\n                    }\r\n                }\r\n\r\n                // Gutters\r\n                //\r\n                // Make use of `.g-*`, `.gx-*` or `.gy-*` utilities to change spacing between the columns.\r\n                @each $key, $value in $gutters {\r\n                    .g#{$infix}-#{$key},\r\n                    .gx#{$infix}-#{$key} {\r\n                        --#{$variable-prefix}gutter-x: #{$value};\r\n                    }\r\n\r\n                    .g#{$infix}-#{$key},\r\n                    .gy#{$infix}-#{$key} {\r\n                        --#{$variable-prefix}gutter-y: #{$value};\r\n                    }\r\n                }\r\n            }\r\n        }\r\n    }\r\n}\r\n","@font-face {\n  font-family: \"Rubik\";\n  src: url(\"../fonts/Rubik-Light.woff2\") format(\"woff2\"), url(\"../fonts/Rubik-Light.woff\") format(\"woff\");\n  font-weight: 300;\n  font-style: normal;\n  font-display: swap; }\n\n@font-face {\n  font-family: \"Rubik\";\n  src: url(\"../fonts/Rubik-Regular.woff2\") format(\"woff2\"), url(\"../fonts/Rubik-Regular.woff\") format(\"woff\");\n  font-weight: 400;\n  font-style: normal;\n  font-display: swap; }\n\n@font-face {\n  font-family: \"Rubik\";\n  src: url(\"../fonts/Rubik-Medium.woff2\") format(\"woff2\"), url(\"../fonts/Rubik-Medium.woff\") format(\"woff\");\n  font-weight: 500;\n  font-style: normal;\n  font-display: swap; }\n\n@font-face {\n  font-family: \"Rubik\";\n  src: url(\"../fonts/Rubik-Bold.woff2\") format(\"woff2\"), url(\"../fonts/Rubik-Bold.woff\") format(\"woff\");\n  font-weight: 700;\n  font-style: normal;\n  font-display: swap; }\n\n@font-face {\n  font-family: \"Rubik\";\n  src: url(\"../fonts/Rubik-Black.woff2\") format(\"woff2\"), url(\"../fonts/Rubik-Black.woff\") format(\"woff\");\n  font-weight: 900;\n  font-style: normal;\n  font-display: swap; }\n\n.title {\n  margin-bottom: 37px;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 24px;\n  line-height: 34px;\n  letter-spacing: 0.03em;\n  text-transform: uppercase;\n  color: #F2F2FF; }\n  @media screen and (min-width: 768px) {\n    .title {\n      margin-bottom: 74px;\n      font-size: 36px;\n      line-height: 72px;\n      letter-spacing: 0.05em; } }\n\n.button__registration {\n  display: block;\n  max-width: 288px;\n  padding: 16px 60px;\n  text-align: center;\n  background: #F6255A;\n  border-radius: 8px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 14px;\n  line-height: 17px;\n  text-transform: uppercase;\n  color: #F2F2FF; }\n  @media screen and (min-width: 768px) {\n    .button__registration {\n      max-width: 310px;\n      padding: 21px 47px;\n      font-size: 18px;\n      line-height: 21px; } }\n\n.row {\n  --bs-gutter-x: 1.5rem;\n  --bs-gutter-y: 0;\n  display: flex;\n  flex-wrap: wrap;\n  margin-top: calc(-1 * var(--bs-gutter-y));\n  margin-right: calc(-.5 * var(--bs-gutter-x));\n  margin-left: calc(-.5 * var(--bs-gutter-x)); }\n  .row > * {\n    flex-shrink: 0;\n    width: 100%;\n    max-width: 100%;\n    padding-right: calc(var(--bs-gutter-x) * .5);\n    padding-left: calc(var(--bs-gutter-x) * .5);\n    margin-top: var(--bs-gutter-y); }\n\n@media (min-width: 320px) {\n  .col-xs {\n    flex: 1 0 0; }\n  .row-cols-xs-auto > * {\n    flex: 0 0 auto;\n    width: auto; }\n  .row-cols-xs-1 > * {\n    flex: 0 0 auto;\n    width: 100%; }\n  .row-cols-xs-2 > * {\n    flex: 0 0 auto;\n    width: 50%; }\n  .row-cols-xs-3 > * {\n    flex: 0 0 auto;\n    width: 33.33333%; }\n  .row-cols-xs-4 > * {\n    flex: 0 0 auto;\n    width: 25%; }\n  .row-cols-xs-5 > * {\n    flex: 0 0 auto;\n    width: 20%; }\n  .row-cols-xs-6 > * {\n    flex: 0 0 auto;\n    width: 16.66667%; }\n  .col-xs-auto {\n    flex: 0 0 auto;\n    width: auto; }\n  .col-xs-1 {\n    flex: 0 0 auto;\n    width: 50%; }\n  .col-xs-2 {\n    flex: 0 0 auto;\n    width: 100%; }\n  .offset-xs-0 {\n    margin-left: 0; }\n  .offset-xs-1 {\n    margin-left: 50%; }\n  .g-xs-0,\n  .gx-xs-0 {\n    --bs-gutter-x: 0; }\n  .g-xs-0,\n  .gy-xs-0 {\n    --bs-gutter-y: 0; }\n  .g-xs-1,\n  .gx-xs-1 {\n    --bs-gutter-x: 0.25rem; }\n  .g-xs-1,\n  .gy-xs-1 {\n    --bs-gutter-y: 0.25rem; }\n  .g-xs-2,\n  .gx-xs-2 {\n    --bs-gutter-x: 0.5rem; }\n  .g-xs-2,\n  .gy-xs-2 {\n    --bs-gutter-y: 0.5rem; }\n  .g-xs-3,\n  .gx-xs-3 {\n    --bs-gutter-x: 1rem; }\n  .g-xs-3,\n  .gy-xs-3 {\n    --bs-gutter-y: 1rem; }\n  .g-xs-4,\n  .gx-xs-4 {\n    --bs-gutter-x: 1.5rem; }\n  .g-xs-4,\n  .gy-xs-4 {\n    --bs-gutter-y: 1.5rem; }\n  .g-xs-5,\n  .gx-xs-5 {\n    --bs-gutter-x: 3rem; }\n  .g-xs-5,\n  .gy-xs-5 {\n    --bs-gutter-y: 3rem; } }\n\n@media (min-width: 1170px) {\n  .col-lg {\n    flex: 1 0 0; }\n  .row-cols-lg-auto > * {\n    flex: 0 0 auto;\n    width: auto; }\n  .row-cols-lg-1 > * {\n    flex: 0 0 auto;\n    width: 100%; }\n  .row-cols-lg-2 > * {\n    flex: 0 0 auto;\n    width: 50%; }\n  .row-cols-lg-3 > * {\n    flex: 0 0 auto;\n    width: 33.33333%; }\n  .row-cols-lg-4 > * {\n    flex: 0 0 auto;\n    width: 25%; }\n  .row-cols-lg-5 > * {\n    flex: 0 0 auto;\n    width: 20%; }\n  .row-cols-lg-6 > * {\n    flex: 0 0 auto;\n    width: 16.66667%; }\n  .col-lg-auto {\n    flex: 0 0 auto;\n    width: auto; }\n  .col-lg-1 {\n    flex: 0 0 auto;\n    width: 50%; }\n  .col-lg-2 {\n    flex: 0 0 auto;\n    width: 100%; }\n  .offset-lg-0 {\n    margin-left: 0; }\n  .offset-lg-1 {\n    margin-left: 50%; }\n  .g-lg-0,\n  .gx-lg-0 {\n    --bs-gutter-x: 0; }\n  .g-lg-0,\n  .gy-lg-0 {\n    --bs-gutter-y: 0; }\n  .g-lg-1,\n  .gx-lg-1 {\n    --bs-gutter-x: 0.25rem; }\n  .g-lg-1,\n  .gy-lg-1 {\n    --bs-gutter-y: 0.25rem; }\n  .g-lg-2,\n  .gx-lg-2 {\n    --bs-gutter-x: 0.5rem; }\n  .g-lg-2,\n  .gy-lg-2 {\n    --bs-gutter-y: 0.5rem; }\n  .g-lg-3,\n  .gx-lg-3 {\n    --bs-gutter-x: 1rem; }\n  .g-lg-3,\n  .gy-lg-3 {\n    --bs-gutter-y: 1rem; }\n  .g-lg-4,\n  .gx-lg-4 {\n    --bs-gutter-x: 1.5rem; }\n  .g-lg-4,\n  .gy-lg-4 {\n    --bs-gutter-y: 1.5rem; }\n  .g-lg-5,\n  .gx-lg-5 {\n    --bs-gutter-x: 3rem; }\n  .g-lg-5,\n  .gy-lg-5 {\n    --bs-gutter-y: 3rem; } }\n\n@media (min-width: 768px) and (min-width: 320px) {\n  .col-xs {\n    flex: 1 0 0%; }\n  .row-cols-xs-auto > * {\n    flex: 0 0 auto;\n    width: auto; }\n  .row-cols-xs-1 > * {\n    flex: 0 0 auto;\n    width: 100%; }\n  .row-cols-xs-2 > * {\n    flex: 0 0 auto;\n    width: 50%; }\n  .row-cols-xs-3 > * {\n    flex: 0 0 auto;\n    width: 33.33333%; }\n  .row-cols-xs-4 > * {\n    flex: 0 0 auto;\n    width: 25%; }\n  .row-cols-xs-5 > * {\n    flex: 0 0 auto;\n    width: 20%; }\n  .row-cols-xs-6 > * {\n    flex: 0 0 auto;\n    width: 16.66667%; }\n  .col-xs-auto {\n    flex: 0 0 auto;\n    width: auto; }\n  .col-xs-1 {\n    flex: 0 0 auto;\n    width: 16.66667%; }\n  .col-xs-2 {\n    flex: 0 0 auto;\n    width: 33.33333%; }\n  .col-xs-3 {\n    flex: 0 0 auto;\n    width: 50%; }\n  .col-xs-4 {\n    flex: 0 0 auto;\n    width: 66.66667%; }\n  .col-xs-5 {\n    flex: 0 0 auto;\n    width: 83.33333%; }\n  .col-xs-6 {\n    flex: 0 0 auto;\n    width: 100%; }\n  .offset-xs-0 {\n    margin-left: 0; }\n  .offset-xs-1 {\n    margin-left: 16.66667%; }\n  .offset-xs-2 {\n    margin-left: 33.33333%; }\n  .offset-xs-3 {\n    margin-left: 50%; }\n  .offset-xs-4 {\n    margin-left: 66.66667%; }\n  .offset-xs-5 {\n    margin-left: 83.33333%; }\n  .g-xs-0,\n  .gx-xs-0 {\n    --bs-gutter-x: 0; }\n  .g-xs-0,\n  .gy-xs-0 {\n    --bs-gutter-y: 0; }\n  .g-xs-1,\n  .gx-xs-1 {\n    --bs-gutter-x: 0.25rem; }\n  .g-xs-1,\n  .gy-xs-1 {\n    --bs-gutter-y: 0.25rem; }\n  .g-xs-2,\n  .gx-xs-2 {\n    --bs-gutter-x: 0.5rem; }\n  .g-xs-2,\n  .gy-xs-2 {\n    --bs-gutter-y: 0.5rem; }\n  .g-xs-3,\n  .gx-xs-3 {\n    --bs-gutter-x: 1rem; }\n  .g-xs-3,\n  .gy-xs-3 {\n    --bs-gutter-y: 1rem; }\n  .g-xs-4,\n  .gx-xs-4 {\n    --bs-gutter-x: 1.5rem; }\n  .g-xs-4,\n  .gy-xs-4 {\n    --bs-gutter-y: 1.5rem; }\n  .g-xs-5,\n  .gx-xs-5 {\n    --bs-gutter-x: 3rem; }\n  .g-xs-5,\n  .gy-xs-5 {\n    --bs-gutter-y: 3rem; } }\n\n@media (min-width: 768px) and (min-width: 1170px) {\n  .col-lg {\n    flex: 1 0 0%; }\n  .row-cols-lg-auto > * {\n    flex: 0 0 auto;\n    width: auto; }\n  .row-cols-lg-1 > * {\n    flex: 0 0 auto;\n    width: 100%; }\n  .row-cols-lg-2 > * {\n    flex: 0 0 auto;\n    width: 50%; }\n  .row-cols-lg-3 > * {\n    flex: 0 0 auto;\n    width: 33.33333%; }\n  .row-cols-lg-4 > * {\n    flex: 0 0 auto;\n    width: 25%; }\n  .row-cols-lg-5 > * {\n    flex: 0 0 auto;\n    width: 20%; }\n  .row-cols-lg-6 > * {\n    flex: 0 0 auto;\n    width: 16.66667%; }\n  .col-lg-auto {\n    flex: 0 0 auto;\n    width: auto; }\n  .col-lg-1 {\n    flex: 0 0 auto;\n    width: 16.66667%; }\n  .col-lg-2 {\n    flex: 0 0 auto;\n    width: 33.33333%; }\n  .col-lg-3 {\n    flex: 0 0 auto;\n    width: 50%; }\n  .col-lg-4 {\n    flex: 0 0 auto;\n    width: 66.66667%; }\n  .col-lg-5 {\n    flex: 0 0 auto;\n    width: 83.33333%; }\n  .col-lg-6 {\n    flex: 0 0 auto;\n    width: 100%; }\n  .offset-lg-0 {\n    margin-left: 0; }\n  .offset-lg-1 {\n    margin-left: 16.66667%; }\n  .offset-lg-2 {\n    margin-left: 33.33333%; }\n  .offset-lg-3 {\n    margin-left: 50%; }\n  .offset-lg-4 {\n    margin-left: 66.66667%; }\n  .offset-lg-5 {\n    margin-left: 83.33333%; }\n  .g-lg-0,\n  .gx-lg-0 {\n    --bs-gutter-x: 0; }\n  .g-lg-0,\n  .gy-lg-0 {\n    --bs-gutter-y: 0; }\n  .g-lg-1,\n  .gx-lg-1 {\n    --bs-gutter-x: 0.25rem; }\n  .g-lg-1,\n  .gy-lg-1 {\n    --bs-gutter-y: 0.25rem; }\n  .g-lg-2,\n  .gx-lg-2 {\n    --bs-gutter-x: 0.5rem; }\n  .g-lg-2,\n  .gy-lg-2 {\n    --bs-gutter-y: 0.5rem; }\n  .g-lg-3,\n  .gx-lg-3 {\n    --bs-gutter-x: 1rem; }\n  .g-lg-3,\n  .gy-lg-3 {\n    --bs-gutter-y: 1rem; }\n  .g-lg-4,\n  .gx-lg-4 {\n    --bs-gutter-x: 1.5rem; }\n  .g-lg-4,\n  .gy-lg-4 {\n    --bs-gutter-y: 1.5rem; }\n  .g-lg-5,\n  .gx-lg-5 {\n    --bs-gutter-x: 3rem; }\n  .g-lg-5,\n  .gy-lg-5 {\n    --bs-gutter-y: 3rem; } }\n\n.container,\n.container-fluid,\n.container-xs,\n.container-lg {\n  width: 100%;\n  padding-right: var(--bs-gutter-x, 0);\n  padding-left: var(--bs-gutter-x, 0);\n  margin-right: auto;\n  margin-left: auto; }\n\n@media (min-width: 320px) {\n  .container-xs {\n    max-width: calc(100% - 32px); } }\n\n@media (min-width: 1170px) {\n  .container-xs, .container-lg {\n    max-width: 1170px; } }\n\nbody {\n  max-width: 100vw;\n  min-height: 100vh;\n  display: flex;\n  flex-direction: column;\n  overflow-x: hidden;\n  margin: auto;\n  background: linear-gradient(180.21deg, #000626 0.2%, #01042D 6.01%, #0A0C2C 8.56%, #00032B 13.44%, #02092F 18.04%, #020530 23.22%);\n  font-family: \"Rubik\"; }\n  body,\n  body *,\n  body *:after,\n  body *:before {\n    box-sizing: border-box; }\n\nmain {\n  position: relative;\n  z-index: 1;\n  flex-grow: 1; }\n\na {\n  text-decoration: none;\n  -webkit-tap-highlight-color: transparent; }\n\np {\n  margin-top: 0;\n  margin-bottom: 1em; }\n  p:last-child {\n    margin-bottom: 0; }\n\nh1,\nh2,\nh3,\nh4,\nh5,\nh6 {\n  margin-top: 0; }\n\nsvg {\n  fill: currentColor; }\n\n@font-face {\n  font-family: \"Rubik\";\n  src: url(\"../fonts/Rubik-Light.woff2\") format(\"woff2\"), url(\"../fonts/Rubik-Light.woff\") format(\"woff\");\n  font-weight: 300;\n  font-style: normal;\n  font-display: swap; }\n\n@font-face {\n  font-family: \"Rubik\";\n  src: url(\"../fonts/Rubik-Regular.woff2\") format(\"woff2\"), url(\"../fonts/Rubik-Regular.woff\") format(\"woff\");\n  font-weight: 400;\n  font-style: normal;\n  font-display: swap; }\n\n@font-face {\n  font-family: \"Rubik\";\n  src: url(\"../fonts/Rubik-Medium.woff2\") format(\"woff2\"), url(\"../fonts/Rubik-Medium.woff\") format(\"woff\");\n  font-weight: 500;\n  font-style: normal;\n  font-display: swap; }\n\n@font-face {\n  font-family: \"Rubik\";\n  src: url(\"../fonts/Rubik-Bold.woff2\") format(\"woff2\"), url(\"../fonts/Rubik-Bold.woff\") format(\"woff\");\n  font-weight: 700;\n  font-style: normal;\n  font-display: swap; }\n\n@font-face {\n  font-family: \"Rubik\";\n  src: url(\"../fonts/Rubik-Black.woff2\") format(\"woff2\"), url(\"../fonts/Rubik-Black.woff\") format(\"woff\");\n  font-weight: 900;\n  font-style: normal;\n  font-display: swap; }\n\n.header {\n  color: #F2F2FF; }\n\n.header-nav {\n  background-color: #040B3C; }\n\n.header-nav__wrapper {\n  display: flex;\n  justify-content: space-between;\n  padding: 0 16px;\n  height: 53px; }\n  @media screen and (min-width: 768px) {\n    .header-nav__wrapper {\n      height: 118px;\n      max-width: 1170px;\n      margin: 0 auto; } }\n\n.logo {\n  display: flex;\n  align-items: center; }\n\n.header-banner__wrapper {\n  background-image: url(\"/src/images/bg-banner_mobile.png\");\n  background-repeat: no-repeat;\n  background-position: 100% 50%; }\n  @media screen and (min-width: 768px) {\n    .header-banner__wrapper {\n      background-image: none; } }\n\n@media screen and (min-width: 768px) {\n  .header-info {\n    background-image: url(\"/src/images/bg-banner_desktop.png\");\n    background-repeat: no-repeat;\n    background-size: cover;\n    background-position: 50%; } }\n\n.header-banner__logo {\n  display: block;\n  margin-top: 36px; }\n  @media screen and (min-width: 768px) {\n    .header-banner__logo {\n      margin-top: 16px; } }\n\n.header-banner__title {\n  max-width: 500px;\n  margin-top: 17px;\n  font-style: normal;\n  font-weight: 500;\n  font-size: 20px;\n  line-height: 24px; }\n  @media screen and (min-width: 768px) {\n    .header-banner__title {\n      margin-top: 15px;\n      font-size: 24px;\n      line-height: 28px; } }\n\n.header-banner__description {\n  max-width: 500px;\n  margin-top: 14px;\n  font-style: normal;\n  font-weight: 300;\n  font-size: 20px;\n  line-height: 24px; }\n  @media screen and (min-width: 768px) {\n    .header-banner__description {\n      margin-top: 21px;\n      font-size: 24px;\n      line-height: 28px; } }\n\n.header-banner__datetime {\n  display: flex;\n  margin-top: 29px;\n  font-style: normal;\n  font-weight: bold;\n  font-size: 24px;\n  line-height: 28px; }\n  @media screen and (min-width: 768px) {\n    .header-banner__datetime {\n      margin-top: 55px;\n      font-size: 36px;\n      line-height: 43px; } }\n\n.header-banner__date {\n  margin-right: 27px; }\n  .header-banner__date::before {\n    content: '';\n    position: absolute;\n    margin-left: 204px;\n    height: 30px;\n    border-left: 3px solid #F6255A; }\n    @media screen and (min-width: 768px) {\n      .header-banner__date::before {\n        margin-left: 306px;\n        height: 48px; } }\n  @media screen and (min-width: 768px) {\n    .header-banner__date {\n      margin-right: 51px; } }\n\n.header-banner__button {\n  margin-top: 31px; }\n  @media screen and (min-width: 768px) {\n    .header-banner__button {\n      margin-top: 57px; } }\n\n.modal {\n  position: fixed;\n  color: #000000;\n  background-color: #f8f3f0;\n  box-shadow: 0 30px 50px rgba(0, 0, 0, 0.7); }\n\n.modal-login {\n  top: 140px;\n  left: 50%;\n  display: none;\n  width: 300px;\n  margin-left: -135px;\n  padding: 50px 80px; }\n  @media screen and (min-width: 768px) {\n    .modal-login {\n      top: 120px;\n      margin-left: -230px; } }\n\n.modal-show {\n  display: block; }\n\n.modal-close {\n  position: absolute;\n  top: 0;\n  right: -34px;\n  width: 22px;\n  height: 22px;\n  background-color: transparent;\n  border: 0;\n  cursor: pointer; }\n\n.modal-close::before,\n.modal-close::after {\n  content: \"\";\n  position: absolute;\n  top: 10px;\n  left: 2px;\n  width: 19px;\n  height: 3px;\n  background-color: #d0d0d0; }\n\n.modal-close::before {\n  transform: rotate(45deg); }\n\n.modal-close::after {\n  transform: rotate(-45deg); }\n\n.modal h2 {\n  margin: 0;\n  margin-bottom: 20px;\n  font-size: 30px;\n  line-height: 42px; }\n\n.login-form p {\n  margin: 0;\n  margin-bottom: 10px; }\n\n.login-form input[type=\"text\"],\n.login-form input[type=\"password\"] {\n  box-sizing: border-box;\n  width: 100%;\n  padding: 10px 15px;\n  padding-right: 40px;\n  font: inherit;\n  color: #000000;\n  text-transform: uppercase;\n  background-color: #f9f6f3;\n  border: 2px solid #e5ddd5; }\n\n.login-form input:focus {\n  border-color: #663d15; }\n\n.login-password-info {\n  display: flex;\n  flex-wrap: wrap;\n  justify-content: space-between; }\n\n.login-checkbox {\n  position: relative;\n  padding-left: 30px;\n  cursor: pointer; }\n\n.login-checkbox:hover,\n.login-checkbox:focus {\n  color: #663d15; }\n\n.login-checkbox input[type=\"checkbox\"] + .checkbox-indicator {\n  position: absolute;\n  top: 0;\n  left: 0;\n  width: 17px;\n  height: 17px;\n  border: 2px solid #000000; }\n\n.login-checkbox input[type=\"checkbox\"]:focus + .checkbox-indicator {\n  border-color: #663d15;\n  outline: thin dotted;\n  outline: 5px auto; }\n\n.login-checkbox input[type=\"checkbox\"]:checked + .checkbox-indicator::before,\n.login-checkbox input[type=\"checkbox\"]:checked + .checkbox-indicator::after {\n  content: \"\";\n  position: absolute;\n  top: 8px;\n  left: 1px;\n  width: 15px;\n  height: 2px;\n  background-color: #000000; }\n\n.login-checkbox input[type=\"checkbox\"]:checked + .checkbox-indicator::before {\n  transform: rotate(45deg); }\n\n.login-checkbox input[type=\"checkbox\"]:checked + .checkbox-indicator::after {\n  transform: rotate(-45deg); }\n\n.restore {\n  color: #000000;\n  text-decoration: underline; }\n\n.restore:hover,\n.restore:focus {\n  text-decoration: none; }\n\n.login-form .button {\n  width: 300px;\n  box-sizing: border-box;\n  margin-right: 0;\n  background-color: #826550;\n  color: #f8f3f0; }\n\n.advantages {\n  margin-top: 80px; }\n  @media screen and (min-width: 768px) {\n    .advantages {\n      margin-top: 200px; } }\n\n.advantages__text {\n  margin-left: 12px;\n  font-style: normal;\n  font-weight: normal;\n  font-size: 14px;\n  line-height: 18px; }\n  @media screen and (min-width: 768px) {\n    .advantages__text {\n      margin-left: 22px;\n      font-size: 18px;\n      line-height: 25px; } }\n\n.advantages__item {\n  display: flex;\n  margin-bottom: 18px; }\n  @media screen and (min-width: 768px) {\n    .advantages__item {\n      margin-bottom: 90px; } }\n\n.advantages__icon {\n  display: flex;\n  align-items: center; }\n  .advantages__icon svg {\n    fill: #040B3C; }\n    @media screen and (min-width: 768px) {\n      .advantages__icon svg {\n        width: 53px;\n        height: 50px; } }\n","// Container widths\n//\n// Set the container width, and override it for fixed navbars in media queries.\n\n@if $enable-grid-classes {\n  // Single container class with breakpoint max-widths\n  .container,\n  // 100% wide container at all breakpoints\n  .container-fluid {\n    @include make-container();\n  }\n\n  // Responsive containers that are 100% wide until a breakpoint\n  @each $breakpoint, $container-max-width in $container-max-widths {\n    .container-#{$breakpoint} {\n      @extend .container-fluid;\n    }\n\n    @include media-breakpoint-up($breakpoint, $grid-breakpoints) {\n      %responsive-container-#{$breakpoint} {\n        max-width: $container-max-width;\n      }\n\n      // Extend each breakpoint which is smaller or equal to the current breakpoint\n      $extend-breakpoint: true;\n\n      @each $name, $width in $grid-breakpoints {\n        @if ($extend-breakpoint) {\n          .container#{breakpoint-infix($name, $grid-breakpoints)} {\n            @extend %responsive-container-#{$breakpoint};\n          }\n\n          // Once the current breakpoint is reached, stop extending\n          @if ($breakpoint == $name) {\n            $extend-breakpoint: false;\n          }\n        }\n      }\n    }\n  }\n}\n","// Container mixins\n\n@mixin make-container($gutter: $container-padding-x) {\n  width: 100%;\n  padding-right: var(--#{$variable-prefix}gutter-x, #{$gutter});\n  padding-left: var(--#{$variable-prefix}gutter-x, #{$gutter});\n  margin-right: auto;\n  margin-left: auto;\n}\n",".header {\r\n  color: $white;\r\n}\r\n.header-nav {\r\n  background-color: $blue;\r\n}\r\n\r\n.header-nav__wrapper {\r\n  display: flex;\r\n  justify-content: space-between;\r\n  padding: 0 16px;\r\n  height: 53px;\r\n\r\n  @include min-tablet {\r\n    height: 118px;\r\n    max-width: 1170px;\r\n    margin: 0 auto;\r\n  }  \r\n}\r\n\r\n.logo {\r\n  display: flex;\r\n  align-items: center;\r\n}\r\n\r\n.header-banner__wrapper {\r\n  background-image: url(\"/src/images/bg-banner_mobile.png\");\r\n  background-repeat: no-repeat;\r\n  background-position: 100% 50%;\r\n\r\n  @include min-tablet {\r\n    background-image: none;\r\n  }\r\n}\r\n\r\n.header-info {\r\n  @include min-tablet {\r\n    background-image: url(\"/src/images/bg-banner_desktop.png\");\r\n    background-repeat: no-repeat;\r\n    background-size: cover;\r\n    background-position: 50%;\r\n  }\r\n}\r\n\r\n.header-banner__logo {\r\n  display: block;\r\n  margin-top: 36px;\r\n\r\n  @include min-tablet {\r\n    margin-top: 16px;\r\n  }  \r\n}\r\n\r\n.header-banner__title {\r\n  max-width: 500px;\r\n  margin-top: 17px;\r\n  font-style: normal;\r\n  font-weight: 500;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n\r\n  @include min-tablet {\r\n    margin-top: 15px;\r\n    font-size: 24px;\r\n    line-height: 28px;\r\n  } \r\n  \r\n}\r\n\r\n.header-banner__description {\r\n  max-width: 500px;\r\n  margin-top: 14px;\r\n  font-style: normal;\r\n  font-weight: 300;\r\n  font-size: 20px;\r\n  line-height: 24px;\r\n\r\n  @include min-tablet {\r\n    margin-top: 21px;\r\n    font-size: 24px;\r\n    line-height: 28px;\r\n  } \r\n}\r\n\r\n.header-banner__datetime {\r\n  display: flex;\r\n  margin-top: 29px;\r\n  font-style: normal;\r\n  font-weight: bold;\r\n  font-size: 24px;\r\n  line-height: 28px;\r\n\r\n  @include min-tablet {\r\n    margin-top: 55px;\r\n    font-size: 36px;\r\n    line-height: 43px;\r\n  }\r\n}\r\n\r\n.header-banner__date {\r\n  margin-right: 27px;\r\n\r\n  &::before {\r\n    content: '';\r\n    position: absolute;\r\n    margin-left: 204px;\r\n    height: 30px;\r\n    border-left: 3px solid #F6255A;\r\n    \r\n    @include min-tablet {\r\n      margin-left: 306px;\r\n      height: 48px;\r\n    }\r\n  }\r\n\r\n  @include min-tablet {\r\n    margin-right: 51px;\r\n  }\r\n}\r\n\r\n.header-banner__button {\r\n  margin-top: 31px;\r\n\r\n  @include min-tablet {\r\n    margin-top: 57px;\r\n  }\r\n}",".modal {\r\n    position: fixed;\r\n    color: #000000;\r\n    background-color: #f8f3f0;\r\n    box-shadow: 0 30px 50px rgba(0, 0, 0, 0.7);\r\n}\r\n\r\n.modal-login {\r\n    top: 140px;\r\n    left: 50%;\r\n    display: none;\r\n    width: 300px;\r\n    margin-left: -135px;\r\n    padding: 50px 80px;\r\n\r\n    @include min-tablet{\r\n        top: 120px;\r\n        margin-left: -230px;\r\n    }\r\n}\r\n\r\n.modal-show {\r\n    display: block;\r\n}\r\n\r\n.modal-close {\r\n    position: absolute;\r\n    top: 0;\r\n    right: -34px;\r\n    width: 22px;\r\n    height: 22px;\r\n    background-color: transparent;\r\n    border: 0;\r\n    cursor: pointer;\r\n}\r\n\r\n.modal-close::before,\r\n.modal-close::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 10px;\r\n    left: 2px;\r\n    width: 19px;\r\n    height: 3px;\r\n    background-color: #d0d0d0;\r\n}\r\n\r\n.modal-close::before {\r\n    transform: rotate(45deg);\r\n\r\n}\r\n\r\n.modal-close::after {\r\n    transform: rotate(-45deg);\r\n\r\n}\r\n\r\n.modal h2 {\r\n    margin: 0;\r\n    margin-bottom: 20px;\r\n    font-size: 30px;\r\n    line-height: 42px;\r\n}\r\n\r\n.login-form p {\r\n    margin: 0;\r\n    margin-bottom: 10px;\r\n}\r\n\r\n.login-form input[type=\"text\"],\r\n.login-form input[type=\"password\"] {\r\n    box-sizing: border-box;\r\n    width: 100%;\r\n    padding: 10px 15px;\r\n    padding-right: 40px;\r\n    font: inherit;\r\n    color: #000000;\r\n    text-transform: uppercase;\r\n\r\n    background-color: #f9f6f3;\r\n    border: 2px solid #e5ddd5;;\r\n}\r\n\r\n.login-form input:focus {\r\n    border-color: #663d15;\r\n}\r\n\r\n.login-password-info{\r\n    display: flex;\r\n    flex-wrap: wrap;\r\n    justify-content: space-between;\r\n}\r\n\r\n.login-checkbox {\r\n    position: relative;\r\n    padding-left: 30px;\r\n    cursor: pointer;\r\n}\r\n\r\n.login-checkbox:hover,\r\n.login-checkbox:focus {\r\n    color: #663d15;\r\n}\r\n\r\n.login-checkbox input[type=\"checkbox\"] + .checkbox-indicator {\r\n    position: absolute;\r\n    top: 0;\r\n    left: 0;\r\n    width: 17px;\r\n    height: 17px;\r\n    border: 2px solid #000000;\r\n}\r\n\r\n.login-checkbox input[type=\"checkbox\"]:focus + .checkbox-indicator {\r\n    border-color: #663d15;\r\n    outline: thin dotted;\r\n    outline: 5px auto;\r\n}\r\n\r\n.login-checkbox input[type=\"checkbox\"]:checked + .checkbox-indicator::before,\r\n.login-checkbox input[type=\"checkbox\"]:checked + .checkbox-indicator::after {\r\n    content: \"\";\r\n    position: absolute;\r\n    top: 8px;\r\n    left: 1px;\r\n    width: 15px;\r\n    height: 2px;\r\n    background-color: #000000;\r\n}\r\n\r\n.login-checkbox input[type=\"checkbox\"]:checked + .checkbox-indicator::before {\r\n    transform: rotate(45deg);\r\n}\r\n\r\n.login-checkbox input[type=\"checkbox\"]:checked + .checkbox-indicator::after {\r\n    transform: rotate(-45deg);\r\n}\r\n\r\n.restore {\r\n    color: #000000;\r\n    text-decoration: underline;\r\n}\r\n\r\n.restore:hover,\r\n.restore:focus {\r\n    text-decoration: none;\r\n}\r\n\r\n.login-form .button {\r\n    width: 300px;\r\n    box-sizing: border-box;\r\n    margin-right: 0;\r\n    background-color: #826550;\r\n    color: #f8f3f0;\r\n}\r\n",".advantages {\r\n    margin-top: 80px;\r\n\r\n    @include min-tablet {\r\n        margin-top: 200px\r\n    }\r\n}\r\n\r\n.advantages__text {\r\n    margin-left: 12px;\r\n    font-style: normal;\r\n    font-weight: normal;\r\n    font-size: 14px;\r\n    line-height: 18px;\r\n\r\n    @include min-tablet {\r\n        margin-left: 22px;\r\n        font-size: 18px;\r\n        line-height: 25px;\r\n    }\r\n}\r\n\r\n.advantages__item {\r\n    display: flex;\r\n    margin-bottom: 18px;\r\n\r\n    @include min-tablet {\r\n        margin-bottom: 90px;\r\n    }\r\n}\r\n\r\n\r\n.advantages__icon {\r\n    display: flex;\r\n    align-items: center;\r\n\r\n    & svg {\r\n        fill: $blue;\r\n\r\n    @include min-tablet {\r\n        width: 53px;\r\n        height: 50px;\r\n    }\r\n    }\r\n}"]}